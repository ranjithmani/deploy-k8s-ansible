---
- hosts: all
  gather_facts: false
  remote_user: root
  tasks:
    - name: update all packages 
      apt:
       name: "*"
       state: latest
       update_cache: yes

    - name: Get the GPG key of the repository
      shell: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    - name: Change the permission of gpg
      shell: "sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    - name: Apply the repository
      shell: 'echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /" >/etc/apt/sources.list.d/kubernetes.list'
    - name: Install CRI
      shell: "curl -s -fsSL https://get.docker.com | sh"
    - name: Install k8s pkg
      apt:
        pkg:
          - kubelet 
          - kubeadm 
          - kubectl 
          - kubernetes-cni
        state: present
        update_cache: yes
    - name: Hold the k8s pkgs
      shell: "apt-mark hold kubelet kubeadm kubectl"
    - name: update containerd configs
      shell: mkdir -p /etc/containerd ; containerd config default | sudo tee /etc/containerd/config.toml; sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

    - name: restart containerd service
      service:
        name: containerd
        state: restarted

- hosts: master
  gather_facts: false
  remote_user: root
  tasks:
    - name: Init the k8s cluster
      shell: "kubeadm init --apiserver-advertise-address=master-ip --pod-network-cidr=172.16.0.0/16"
    - name: get the token for join
      command: "kubeadm token create --print-join-command"
      changed_when: false
      register: join_cmd
    - name: Set fact for join command
      set_fact:
        join_command: "{{ join_cmd.stdout }}"
      delegate_to: localhost
      run_once: true

- hosts: worker
  gather_facts: false
  remote_user: root
  tasks:
    - name: Join the node to the Kubernetes cluster
      ansible.builtin.shell: "{{ hostvars[groups['master'][0]]['join_command'] }}"

- hosts: localhost
  tasks:
    - name: create .kube dirctory
      file:
        path: ./.kube
        state: directory

- hosts: master
  gather_facts: false
  remote_user: root
  tasks:
    - name: Fetch kubeconfig file from master to localhost
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: ./.kube/config
        flat: yes
      run_once: true

- name: Deploy Calico CNI plugin
  hosts: localhost
  tasks:
    - name: Apply Calico manifest to the cluster
      kubernetes.core.k8s:
        kubeconfig: ./.kube/config
        state: present
        src: https://raw.githubusercontent.com/projectcalico/calico/v3.29.3/manifests/calico.yaml
    - name: Apply Metrics server 
      kubernetes.core.k8s:
        kubeconfig: ./.kube/config
        state: present
        src: ./metrics-server.yaml 
